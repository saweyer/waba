call func(data,off,len)begin	local i;	for i:=off to len	do Print(i & ": " & ExtractByte(data,i));end with (bb,41,60)setvalue(getroot().|wabatester:waba|.iconView, 'icon,	getroot().|wabatester:waba|:getbitmap("test.bmp")))ww := getroot().|WabaTester:waba|.builtinFiles[0].appClasses; //wrp. offset: 34bb := getroot().|WabaTester:waba|:findInboxItem("HelloWorld.pdb").body.data // offset: 106getroot().|WabaTester:waba|:ByteEqual(bb,106,410, ww,34,410)jj := getroot().|WabaTester:waba|:findInboxItem("HelloWorld.jar").body.datagetroot().|WabaTester:waba|:ByteEqual(bb,106,410, jj,50,410)cc := getroot().|WabaTester:waba|:findInboxItem("HelloWorld.class").body.datagetroot().|WabaTester:waba|:ByteEqual(cc,0,410, jj,50,410)ee := getroot().|WabaTester:waba|:findInboxItem("HelloWorld.prc")dd := ee.body.datadd#C425E11  <binary, length 1834>extractlong(dd,72) // offset to next list#0        0extractword(dd,76) // numrec#1C       7// type, id, offset[extractword(dd,80), extractword(dd,82), extractword(dd,84), extractword(dd,86)]#C42EE11  [25701, 1, 0, 150]getroot().|wabatester:waba|getroot().|wabatester:waba|:getWabaClass("Title")getroot().|wabatester:waba|:getWabaClass("waba/ui/Edit")getroot().|WabaTester:waba|.appcontextgetroot().|helloworld:waba|.appcontextgetroot().|helloworld:waba|:close()getroot().|helloworld:waba|:getWabaClass("waba/ui/Edit")getroot().|helloworld:waba|:getWabaClass("HelloWorld")getglobalvar('|vm:waba|).libgetroot().|vm:waba|getroot().|controls:waba|:getWabaClass("HelloWorld")getroot().|controls:waba|:getWabaClass("Controls")getroot().|controls:waba|:getWabaClass("waba/applet/Applet")getroot().|controls:waba|:getWabaClass("waba/lang/String")call func(fr)begin local slot, val;	foreach slot,val in fr	do Print(slot);end with (getroot().|WabaTester:waba|.setappargs)call func() begin // waba_lib_j1	local cl;	local ctxt := getroot().|WabaTester:waba|.appContext;	foreach cl in '["Object", "String", "StringBuffer"]	do ctxt.(Intern("java/lang/" & cl)) := ctxt.(Intern("waba/lang/" & cl));	[ctxt.|java/lang/Object|, ctxt.|java/lang/String|, ctxt.|java/lang/StringBuffer|]end with ()call func() begin // waba_lib_j2	local cl, bb;	local ctxt := getroot().|WabaTester:waba|.appContext;	foreach cl in '["Object", "String", "StringBuffer"]	do begin		bb := getroot().|WabaTester:waba|:findInboxItem(cl & ".class").body.data;		ctxt.(Intern("java/lang/" & cl)) := ctxt.(Intern("waba/lang/" & cl)) :=			{class: bb, offset: 0, length: Length(bb)};		end;	[ctxt.|java/lang/Object|, ctxt.|java/lang/String|, ctxt.|java/lang/StringBuffer|]end with ()/*Print(kAppIcon);call func(name)begin	local rf := OpenResFileX("SW:Waba:WabaTester:WabaTester.rsc");	local icons := MakeExtrasIcons(		[{unhilitedRsrcSpec: name,		bitDepth: 1}],		nil, nil);	CloseResFileX(rf);	Print(icons);	SetPartFrameSlot('icon, icons.icon);	SetPartFrameSlot('iconPro, icons.iconPro);	ReplaceObject(kAppIcon, {});end with ("WabaAppIcon");Print(GetPartFrameSlot('icon));*/call func(d,o,w)begin local i;	for i:=o to o+w-1 by 2	do Print(i & $: && ExtractWord(d,i));end with (makebitmap(10,10,nil).data,0,28)call func(d,o,w)begin local i;	for i:=o to o+w-1 by 2	do Print(i & $: && ExtractByte(d,i) && ExtractByte(d,i+1));end with (getroot().|wabatester:waba|.appclasses,0,62 )/*		if not kAppIcon.mask		then kAppIcon.mask :=			MakeBinaryFromHex("000000000004000000000000001C001C00000380000007E0000007E001FFEFE003FFEFC003FFFFC007FFFF8007FFFF8007FFFF0007FFFF0007FFFE0007FFFE0007FFFC0007FFFC0007FFF80007FFF80007FFF00007FFE00007FFFFF007FFFFF007FFFFF003FFFFF003FFFFF001FFFFF000007FF000007FF000007FF000007FF0",			'bits);*/		//if not kAppIcon.colorData		//then kAppIcon.colorData := {cbits: kAppIcon.bits, bitDepth: 1};Print(kAppIcon);kAppArgs.classHeapSize := 24000;entryremovefromsoupxmit(getappprefs('|tom/waba/view3d/View3DWindow:waba|, {}), nil)getappprefs('|lifesw:waba|, {})qq := call kGetPartCursorFunc with (Stringer(['|peg:waba|]), nil, nil);ee: = qq:?entry();ee := call kGetPartEntryDataFunc with (qq:entry());ii := ee.icon;ii := ee.iconPro.unhilited;setvalue(getroot().|WabaTester:waba|.iconview, 'icon, ii)qq := getroot().extrasdrawer:?GetPartCursor("waba:waba", nil, nil); qq:?entry();ii := qq:entry().icon;strhexdump(ii.mask, nil)setvalue(getroot().|WabaTester:waba|.iconview, 'icon, getroot().extrasdrawer:?GetPartEntryData(qq:?entry()).icon)